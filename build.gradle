/*******************************************************************************
 * Copyright 2020-2021 Exactpro (Exactpro Systems Limited)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/

plugins {
    id 'groovy'
    id 'maven-publish'
    id 'java'
    id 'java-gradle-plugin'
}

ext {
    sharedDir = file("${project.rootDir}/shared")
    OWNER = "th2-net"
    REPOSITORY = "th2-gradle-plugin"
}

group 'com.exactpro.th2'
version release_version
archivesBaseName = 'th2-gradle-plugin'

allprojects {
    dependencies {
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.1'
    }
}

repositories {
    maven {
        name 'MavenLocal' // for local builds only
        url sharedDir
    }
    jcenter()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile gradleApi()
}


jar {
    manifest {
        attributes(
                'Created-By': "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
                'Specification-Title': '',
                'Specification-Vendor': 'Exactpro Systems LLC',
                'Implementation-Title': project.archivesBaseName,
                'Implementation-Vendor': 'Exactpro Systems LLC',
                'Implementation-Vendor-Id': 'com.exactpro',
                'Implementation-Version': project.version,
                'Implementation-Version-Date': getDate()
        )
    }
}

publishing {
    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/${OWNER}/${REPOSITORY}")
                credentials {
                    username = System.getenv("GITHUB_ACTOR")
                    password = System.getenv("GITHUB_TOKEN")
                }
            }
        }
        publications {
            gpr(MavenPublication) {
                from(components.java)
            }
        }
    }
}


static def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd-HH:mm:ss.SSS')
    return formattedDate
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: classes) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives sourcesJar, javadocJar
}